// Common onCue configuration
oncue {
	service {
		hostname = "localhost"
		port = 9090	
	}
	client {
		hostname = "localhost"
		port = 0 // random port
	}
	scheduler {
		name = "scheduler"
		path = "akka://oncue-service@"${oncue.service.hostname}":"${oncue.service.port}"/user/scheduler"
		
		// Choose a scheduler
		// class = "oncue.scheduler.SimpleQueuePopScheduler"
		class = "oncue.scheduler.ThrottledScheduler"
		
		// Uncomment the following to use the persistent Redis Backing Store		
		// backing-store-class = "oncue.backingstore.RedisBackingStore"
		
		// The frequency with which unscheduled jobs are broadcast
		broadcast-jobs-frequency = 5 seconds
		
		// Time to wait after a new job has arrived before broadcasting jobs
		broadcast-jobs-quiescence-period = 1 second
		
		// The frequency with which agents are monitored for death
		monitor-agents-frequency = 5 seconds
		
		// The timeout before an agent is deemed to be dead
		agent-heartbeat-timeout = 15 seconds
	}

	agent {
		name = "agent"
		path = "/user/agent"
				
		// Choose an Agent
		// class = "oncue.agent.UnlimitedCapacityAgent"
		class = "oncue.agent.ThrottledAgent"
				
		// The frequenct of agent heartbeats		
		heartbeat-frequency = 5 seconds
		
		// Maximum number of concurrent jobs to process
		throttled-agent {
			max-jobs = 100
		}
		
		// List of fully qualified class names of workers that the agent can spawn when running in Akka microkernel
		workers = [
		]
	}
	api {
		name = "api"
		
		// The timeout for all API invocations
		timeout = 2 seconds
	}
}

// Configuration for onCue service components
service {
	oncue {
		queue-manager {
			path = "/user/queueManager"
		}
	}
	akka {
		remote {
			netty {
				hostname = ${oncue.service.hostname}
				port = ${oncue.service.port}
			}
		}
	}
}

// Configuration for onCue agents and API clients
client {
	oncue {
		queue-manager {
			path = "akka://oncue-service@"${oncue.service.hostname}":"${oncue.service.port}"/user/queueManager"
		}
	}
	akka {
		remote {
			netty {
				hostname = ${oncue.client.hostname}
				port = ${oncue.client.port}
			}
		}
	}
}