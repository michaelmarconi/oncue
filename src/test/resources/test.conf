oncue {
	scheduler {
		name = "scheduler"
		path = "/user/scheduler"
		class = "oncue.scheduler.SimpleQueuePopScheduler"
		
		// The frequency with which unscheduled jobs are broadcast
		broadcast-jobs-frequency = 5 seconds
		
		// Time to wait after a new job has arrived before broadcasting jobs
		broadcast-jobs-quiescence-period = 1 second
		
		// The frequency with which agents are monitored for death
		monitor-agents-frequency = 5 seconds
		
		// The timeout before an agent is deemed to be dead
		agent-heartbeat-timeout = 15 seconds
	}
	queue-manager {
		name = "queueManager"
		path = "/user/queueManager"
		class = "oncue.queueManager.impl.InMemoryQueueManager"
	}
	agent {
		name = "agent"
		class = "oncue.agent.UnlimitedCapacityAgent"
				
		// The frequenct of agent heartbeats		
		heartbeat-frequency = 5 seconds
		
		// Maximum number of concurrent jobs to process
		throttled-agent {
			max-jobs = 1000
		}		
	}
	api {
		name = "api"
				
		// The timeout for all API invocations
		timeout = 2 seconds						
	}
}

akka {
	loglevel = INFO
	actor {
		debug {
			autoreceive = off
			lifecycle = off
		}
	}
}

heartbeat-priority-dispatcher {
	mailbox-type = "oncue.scheduler.internal.HeartbeatPriorityMailbox"
}